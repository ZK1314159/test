#port
server:
  port: 9000

#endpoints，查看spring容器信息
management:
  endpoints:
    web:
      exposure:
        include: '*'

spring:
#  elasticsearch:
#    rest:
#      uris: 127.0.0.1:9200
#  kafka:
#    bootstrap-servers: 127.0.0.1:9092
#    producer:
#      retries: 3 #发送失败后重试次数
#      batch-size: 16785
#      buffer-memory: 33554432 #32M处理缓冲区
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      group-id: local #群组
#      enable-auto-commit: false
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      auto-offset-reset: latest
  redis:
    redisson:
      file: classpath:redisson.yml
    #Redis数据库索引（默认0）
    database: 0
    #Redis服务器地址（默认localhost）
    host: 127.0.0.1
    #Redis服务器连接端口号（默认6379）
    port: 6379
    #Redis服务器连接密码（默认为空）
    password: 123456
    lettuce:
      pool:
        max-idle: 8
  datasource:
    dynamic:
      primary: master
      strict: false
      datasource:
        master:
          url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
          username: root
          password:
          driver-class-name: com.mysql.cj.jdbc.Driver
        slave:
          url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
          username: root
          password:
          driver-class-name: com.mysql.cj.jdbc.Driver
        backupMaster:
          url: jdbc:mysql://localhost:3306/slave?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
          username: root
          password:
          driver-class-name: com.mysql.cj.jdbc.Driver
        backupSlave:
          url: jdbc:mysql://localhost:3306/slave?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
          username: root
          password:
          driver-class-name: com.mysql.cj.jdbc.Driver
      hikari:
        min-idle: 1 #最小连接数
        max-pool-size: 8 #最大连接数
        idle-timeout: 300000 #最大空闲时间
        max-lifetime: 1800000 #最大生命周期
        connection-timeout: 5000 #超时时间
        connection-test-query: SELECT 1 #心跳检测
  thymeleaf:
    cache: false
    encoding: utf-8
    mode: HTML
    prefix: classpath:/templates/
    suffix: .html
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl

#test
test:
  user:
    id: 12
    name: zengkai
  newdata: 123

property:
  test:
    id: 1324
    name: zengkai
show:
  flow:
    add-show:
      push-channel: true
      push-wencai: true
      deleteCache: true
    edit-show:
      push-channel: true
      push-wencai: true
      deleteCache: false
  flow-new:
    add-show:
      push-channel: 1
      deleteCache: 3

feign:
  client:
    config:
      default: # 默认配置
        loggerLevel: BASIC              # 日志级别，这里是Feign自己的日志级别，同时需要修改Feign的包的LoggerLevel为DEBUG
        connectTimeout: 500             # 链接超时时间（毫秒）
        readTimeout: 1000               # 数据读取超时时间（毫秒）
        retryer: feign.Retryer.Default  # 重试实现类的配置，这里使用默认的实现类，间隔100毫秒，最大重试次数5次
  httpclient:
    enabled: true
    connection-timeout: 2000       # 连接超时（毫秒）
    time-to-live: 1                # 连接存活时长
    time-to-live-unit: minutes     # 连接存活时长单位
    max-connections: 300           # 最大连接数,默认200
    max-connections-per-route: 50  # 每个路由的最大连接数， 也就是同一个接口允许的最大并发
  hystrix:
    enabled: true
# OpenFeign天生支持hystrix进行熔断配置，如果使用Sentinel需要自己编写熔断逻辑
hystrix:
  threadpool:
    default:
      coreSize: 10							   # 配置线程池核心数，默认10
      maximumSize: 50                          # 配置线程池最大线程数，默认10
      maxQueueSize: 100                        # 配置线程池等待队列最大大小，默认-1无限制，使用SynchrousQueue，大于0则使用LinkedBlockingQueue，不建议设置太大，会导致线程池迟迟无法扩容导致长时间等待
      queueSizeRejectionThreshold: 100         # 配置线程池等待队列拒绝阈值，默认5, maxQueueSize=-1时不生效，等待任务数量大于该值时会被拒绝
  command:
    default: # 默认配置
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000 # 熔断的超时时间，（链接超时+读取超时）*重试次数，以上面的配置为例，重试最多进行1次(加上初始一共两次调用)

mykafka:
  #post送审
  postscan:
    bootstrap-servers: 10.200.0.101:9092,10.200.0.237:9092,10.200.0.193:9092
    topic: sns_postscan
    producer:
      retries: 3 #发送失败后重试次数
      batch-size: 16785
      buffer-memory: 33554432 #32M处理缓冲区
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    jaas:
      loginModule: org.apache.kafka.common.security.scram.ScramLoginModule
      controlFlag: required
      options:
        username: sns
        password: 10jqkasns_%^&
    properties:
      sasl_mechanism: SCRAM-SHA-256
    security.protocol: SASL_PLAINTEXT

threadpool:
  corePoolSize: 3
  maxPoolSize: 6
  queueCapacity: 4
  keepAliveSeconds: 300